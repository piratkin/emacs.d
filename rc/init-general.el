(use-package general
  :ensure t
  :after (which-key)
  :config
  ;; (define-key evil-motion-state-map " " nil)
  (general-evil-setup t)
  (general-define-key
   :states '(motion normal emacs)
   :keymaps 'override
   "u" '(undo-tree-undo :which-key "Undo")
   "U" '(undo-tree-redo :which-key "Redo"))
  (general-define-key
   :states '(motion normal visual emacs)
   :keymaps 'override
   ";" '(helm-M-x :which-key "M-x")
   "H" '(evil-join :which-key "Join")
   "\M-h" '(evil-join-whitespace :which-key "Glue")
   "<S-return>" '(default-indent-new-line :which-key "Newline")
   "K" '(evil-scroll-up t :which-key "Half a page up")
   "J" '(evil-scroll-down t :which-key "Half a page down"))
  (general-define-key
   :states '(motion normal visual emacs)
   :prefix "g"
   :keymaps 'override
   "f" '(rc:find-file-at-point-with-line :which-key "Find file witn line")
   "d" '(rc:goto-definiton-dwim :which-key "Goto dwim")
   "r" '(rc:find-tag-reference :which-key "Goto reference")
   ;; "v" '(better-jumper-jump-backward :which-key "Jump backward")
   ;; "b" '(better-jumper-jump-forward :which-key "Jump forward")
   ;; "v" '(evil-jump-backward-swap :which-key "Jump backward")
   "v" '(evil-jump-backward :which-key "Jump backward")
   "b" '(evil-jump-forward :which-key "Jump forward")
   "V" '(helm-all-mark-rings :which-key "All mark rings"))
  (general-define-key
   :states '(normal visual emacs)
   :prefix "SPC"
   :keymaps 'override
   ;; Main menu
   ;; "f" '(:ignore t :which-key "Files")
   ;; "b" '(:ignore t :which-key "Buffers")
   ;; "d" '(:ignore t :which-key "Dired")
   "g" '(:ignore t :which-key "Git")
   "T" '(:ignore t :which-key "Terminal")
   "e" '(:ignore t :which-key "Edit")
   "i" '(:ignore t :which-key "Imenu")
   ;; "s" '(:ignore t :which-key "Search")
   "x" '(:ignore t :which-key "System")
   "a" '(:ignore t :which-key "Additionally")
   "I" '(:ignore t :which-key "Help")
   ";" '(helm-M-x :which-key "M-x")
   "d" '(dired :which-key "Dired")
   "o" '(delete-other-windows :which-key "Kill other window")
   "q" '(kill-this-buffer :which-key "Buffer kill")
   "Q" '(evil-window-delete :which-key "Window kill")
   "s" '(rc:save-buffer :which-key "Save buffer")
   "S" '(save-some-buffers :which-key "Save all")
   "r" '(rc:rename-current-buffer-file :which-key "Rename file")
   "z" '(zoom-window-zoom :which-key "Zoom current buffer")
   "b" '(switch-to-buffer :which-key "Switch buffer")
   "t" '(multi-vterm-dedicated-toggle :which-key "VTerm toggle")
   ;; "f" '(ace-jump-char-mode :which-key "Jump to char")
;   "F" '(swiper :which-key "Swiper")
   "F" '(helm-occur :which-key "Swiper")
   "f" '(avy-goto-subword-1 :which-key "Jump to char")
   "w" '(ace-window :which-key "Jump to Windows")
   ;; "i" '(counsel-semantic-or-imenu t :which-key "Imenu")
   "ii" '(helm-imenu t :which-key "Imenu")
   "ia" '(helm-imenu-in-all-buffers t :which-key "Imenu in all buffers")
   "H" '(windmove-swap-states-left :which-key "Swap window left")
   "J" '(windmove-swap-states-down :which-key "Swap window bottom")
   "K" '(windmove-swap-states-up :which-key "Swap window top")
   "L" '(windmove-swap-states-right :which-key "Swap window right")
   ;; "h" '(windmove-left :which-key "Move left window")
   "h" '(windmove-left :which-key "Move left window")
   "j" '(windmove-down :which-key "Move bottom window")
   "k" '(windmove-up :which-key "Move top window")
   "l" '(windmove-right :which-key "Move right window")
   "v" '(evil-window-vsplit :which-key "Window vsplit")
   "V" '(evil-window-split :which-key "Window split")
   ;; "SPC h" '(evil-window-move-far-left :which-key "Move far left")
   ;; "SPC l" '(evil-window-move-far-right :which-key "Move far right")
   ;; "SPC j" '(evil-window-move-very-bottom :which-key "Move far bottom")
   ;; "SPC k" '(evil-window-move-very-top :which-key "Move far top")
   "SPC h" '(rc:window-move-far-left :which-key "Move far left")
   "SPC l" '(rc:window-move-far-right :which-key "Move far right")
   "SPC j" '(rc:window-move-very-bottom :which-key "Move far bottom")
   "SPC k" '(rc:window-move-very-top :which-key "Move far top")
   "SPC H" '(evil-window-move-far-left :which-key "Move far left")
   "SPC L" '(evil-window-move-far-right :which-key "Move far right")
   "SPC J" '(evil-window-move-very-bottom :which-key "Move far bottom")
   "SPC K" '(evil-window-move-very-top :which-key "Move far top")
   ;; General
   "W" '(evil-window-map :which-key "Windows")
   ;; "TAB" '(counsel-buffer-or-recentf :which-key "Recent Buffer")
   "TAB" '(helm-recentf :which-key "Recent Buffer")
   ;; Files
   ;; "ff" '(counsel-find-file :which-key "Find file")
   ;; Buffers
   ;; "bx" '(eval-buffer :which-key "Buffer execute")
   ;; "br" '(revert-buffer :which-key "Revert buffer")
   ;; Dired
   ;; Git
   "gh" '(git-timemachine :which-key "Git history")
   "gf" '(counsel-git :which-key "Find in git dir")
   ;; "gm" '(git-timemachine-mode-map :which-key "Git history")
   ;; Terminal
   "Tm" '(multi-vterm :which-key "Multi VTerm")
   "Tv" '(vterm :which-key "VTerm")
   "Ts" '(shell :which-key "Shell")
   "Te" '(eshell :which-key "Emacs Lisp Shell")
   "Ta" '(ansi-term :which-key "ANSI Term")
   ;; Edit
   "ea" '(mark-whole-buffer :which-key "Select All")
   "ee" '(company-yasnippet :which-key "Snippet")
   "eu" '(undo-tree-visualize :which-key "Undo-tree view")
   ;; "ec" '(flyspell-correct-wrapper :which-key "Spell correct")
   "ec" '(flyspell-correct-at-point :which-key "Spell correct")
   "es" '(auto-sudoedit-sudoedit :which-key "Sudo edit")
   "ey" '(yas-insert-snippet :which-key "Snippet insert")
   "eY" '(yas-visit-snippet-file :which-key "Snippet visit")
   "ei" '(symbol-overlay-put :which-key "Symbol put")
   "eI" '(symbol-overlay-remove-all :which-key "Symbol remove all")
   "eH" '(hs-hide-all :which-key "Collapse")
   "eh" '(hs-show-all :which-key "Expand")
   "ex" '(eval-buffer :which-key "Eval buffer")
   ;; Jump
   ;; "jj" '(ace-jump-char-mode :which-key "Jump to char")
   ;; "jw" '(ace-window :which-key "Jump to Windows")
   ;; "jW" '(ace-jump-word-mode :which-key "Jump to word")
   ;; "jl" '(ace-jump-line-mode :which-key "Jump to line")
   ;; "js" '(eassist-switch-h-cpp :which-key "Header\Source")
   ;; Search
   ;; "sd" '(dumb-jump-go :which-key "Jump to def")
   ;; "sD" '(dumb-jump-go-other-window :which-key "Jump def ext")
   ;; "sb" '(dumb-jump-back :which-key "Jump back")
   ;; "sp" '(dumb-jump-go-prompt :which-key "Jump to prompt")
   ;; "sS" '(rc:evil-gtags-goto-dwim :which-key "Locate lib")
   ;; System
   "xx" '(save-buffers-kill-emacs :which-key "Save & exit")
   "xr" '(restart-emacs :which-key "Restart")
   "xm" '(memory-usage :which-key "Memory usage")
   "xi" '(package-list-packages :which-key "Packages")
   "xp" '(rw-profiler-toggle :which-key "Toggle Profiler")
   "xP" '(profiler-report :which-key "Profiler report")
   "xd" '(toggle-debug-on-error :which-key "Debug on Error")
   "xD" '(toggle-debug-on-quit :which-key "Debug on Quit")
   "xb" '(bug-hunter-file :which-key "Bug hunter file")
   "xB" '(bug-hunter-init-file :which-key "Bug hunter init.el")
   ;; Additionally
   ;; "aa" '(counsel-M-x :which-key "M-x")
   ;; "aa" '(rc:tags-create-or-update :which-key "Generate TAGS")
   ;; "aa" '(ctags-update :which-key "Generate TAGS")
   ;; "aa" '(counsel-gtags-create-tags :which-key "Generate TAGS")
   ;; "aa" '(helm-gtags-create-tags :which-key "Generate TAGS")
   "aa" '(rc:create-or-update-tags :which-key "Create TAGS")
   "a+" '(text-scale-increase :which-key "Zoom (+)")
   "a-" '(text-scale-decrease :which-key "Zoom (-)")
   "a=" '(text-scale-adjust :which-key "Zoom (=)")
   "at" '(display-time-world :which-key "World time")
   "ac" '(counsel-world-clock :which-key "World clock")
   "ag" '(google-translate-smooth-translate :which-key "Google Translate")
   "ab" '(google-translate-buffer :which-key "Buffer translate")
   "aG" '(google-this :which-key "Google search")
   "ar" '(google-this-cpp-reference :which-key "Google on GitHub.com")
   "ap" '(list-colors-display :which-key "Color Palette")
   "af" '(counsel-faces :which-key "Counsel Faces")
   "al" '(counsel-locate :which-key "Locate file")
   "aL" '(counsel-find-library :which-key "Locate lib")
   ;; Help
   "Ih" '(help-command :which-key "Help")
   "Id" '(dash-at-point :which-key "Dash at point")
   "ID" '(dash-at-point-with-docset :which-key "Dash with docset")
   "Ik" '(describe-personal-keybindings :which-key "Describe bindings")
   "Im" '(describe-mode :which-key "Describe mode")
   ;; ;; Internet
   ;; "Ii" '(eww :which-key "Emacs Web Wowser")
   ;; "Ib" '(eww-list-bookmarks :which-key "Eww bookmarks")
   ;; "Il" '(eww-browse-url :which-key "Eww link")
   ))

;; --------------------------------------------------------

;; (defun rc:create-or-update-tags ()     (interactive nil))
;; (defun rc:find-tag-reference ()        (interactive nil))
;; (defun rc:goto-definiton-dwim ()       (interactive nil))
;; (defun rc:find-file-at-point-lineno () (interactive nil))
;; (defun rc:save-buffer () (interactive (save-buffer)))

;; --------------------------------------------------------

(defun rc:find-file-at-point-with-line()
  "if file has an attached line num goto that line, ie boom.rb:12"
  (interactive)
  (setq line-num 0)
  (save-excursion
    (search-forward-regexp "[^ ]:" (point-max) t)
    (if (looking-at "[0-9]+")
         (setq line-num (string-to-number (buffer-substring (match-beginning 0) (match-end 0))))))
  (find-file-at-point)
  (if (not (equal line-num 0))
      (goto-line line-num)))

(provide 'init-general)
