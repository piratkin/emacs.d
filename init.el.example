;; Turn off mouse interface early in startup to avoid momentary display
(if (fboundp 'menu-bar-mode) (menu-bar-mode -1))
(if (fboundp 'tool-bar-mode) (tool-bar-mode -1))
(if (fboundp 'scroll-bar-mode) (scroll-bar-mode -1))

;; Set dark background
(set-background-color "#282c34")
(set-foreground-color "#a9afaa")

;; Set title
(setq-default
 frame-title-format
 '("DotMacs "
   (:eval (if (buffer-modified-p)
              "(%m) "
            "[%m] "))
    (:eval (if (buffer-file-name)
              (abbreviate-file-name (buffer-file-name))
            "%b"))))

;; Load lisp packages and initialize them
(package-initialize)

;; Opt out from the startup message in the echo area by simply disabling this
;; ridiculously bizarre thing entirely.
(fset 'display-startup-echo-area-message #'ignore)

;; Hide compile warnings
;; (setq-default warning-minimum-level 'error)
;; (setq warning-minimum-level :error)

;; (put 'inhibit-startup-echo-area-message 'saved-value t)
;; (setq inhibit-startup-echo-area-message (user-login-name))

;; ;; Yes, it's disgusting, but it's a portable way to disable that silly message
;; (put 'inhibit-startup-echo-area-message 'saved-value
;;      (setq inhibit-startup-echo-area-message (user-login-name)))

;; Disable garbage collection on initialize
(setq gc-cons-threshold-original gc-cons-threshold)
(setq gc-cons-threshold (* 1024 1024 100))
(defun my-init-gc-optimize ()
  (setq gc-cons-threshold gc-cons-threshold-original))
(add-hook 'after-init-hook #'my-init-gc-optimize)

;; Disable garbage collection on minibuffer
(defun my-minibuffer-setup-hook ()
  (setq gc-cons-threshold most-positive-fixnum))
(defun my-minibuffer-exit-hook ()
  (setq gc-cons-threshold 800000))
(add-hook 'minibuffer-setup-hook #'my-minibuffer-setup-hook)
(add-hook 'minibuffer-exit-hook #'my-minibuffer-exit-hook)

;;; Configure
(setq mode-line-format nil ; Hide modeline
      ; Disable automatic loading of packages after the init file
      package-enable-at-startup nil
      frame-inhibit-implied-resize t ; Does not resize that frame
      inhibit-startup-screen t ; Hide startup message for older version Emacs
      inhibit-startup-message t ; Hide startup message
      initial-scratch-message "") ; No scratch message

;; Change startup message
(defun display-startup-echo-area-message () nil)
;; (defun display-startup-echo-area-message () (message ""))

;; Init file for custom settings
(setq custom-file "~/.emacs.d/custom.el")
(when (file-exists-p custom-file)
  (load custom-file))

;; ;;; Start as server
;; (require 'server)
;; (unless (server-running-p)
;;   (server-start))

;;; Set load path
(push "~/.dotmacs.d" load-path)

;;; System configuration
(require 'sysconf)

;;; Install packages
(require 'preload)



(provide 'init)
